name: AI Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  review:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Generate diff
        run: |
          git fetch origin ${{ github.base_ref }}
          git diff origin/${{ github.base_ref }} --unified=3 > diff.patch

      - name: Call ChatGPT
        id: ai
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          body=$(cat diff.patch | sed 's/"/\\"/g' )
          resp=$(curl -s https://api.openai.com/v1/chat/completions \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -H "Content-Type: application/json" \
            -d "{
              \"model\": \"gpt-4o-mini\",
              \"messages\": [
                {
                  \"role\": \"system\",
                  \"content\": \"你是一名經驗豐富且資深的 Java Code Reviewer，而這是一份 Leetcode 的問題回答，請以審慎嚴格標準審查以下 diff，檢視並回饋：\\n
                                【A. 邏輯必須正確，且應該盡量避免例外狀況。\\n
                                【B. 效能與資源使用，如下：\\n
                                    - 是否有過多 IO / N+1 Query / 非必要迴圈\\n
                                    - 是否影響 CPU/記憶體，是否可改為 Cache 或 Lazy 機制\\n
                                【C. 可讀性、可維護性，如下：\\n
                                    - 命名是否曖昧、是否有重複程式碼、函式是否過長\\n
                                    - 是否違反 SOLID / DRY / KISS / 分層原則\\n
                                【D. 風險與合規，主要是關於程式碼漏洞\\n
                                【輸出格式要求】\\n
                                    1) 依 A/B/C/D 分類輸出（無問題也要寫無明顯問題）\\n
                                    2) 每個問題須包含「風險說明」與「可執行改善建議」\\n
                                    3) 若可行請附上簡短修正示例（pseudo code 即可）\\n
                                    4) 僅審查本次 PR 內容，不評論未提供之上下文\"
                },
                {
                  \"role\": \"user\",
                  \"content\": \"以下為本次 PR diff，請開始審查：\\n\\n$body\"
                }
              ]
            }")
          echo "out<<EOF" >> $GITHUB_OUTPUT
          echo "$resp" | jq -r '.choices[0].message.content' >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Add Comment to PR
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: process.env.REVIEW
            })
        env:
          REVIEW: ${{ steps.ai.outputs.out }}
