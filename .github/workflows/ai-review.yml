name: AI Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  pull-requests: write
  issues: write
  contents: read

jobs:
  review:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Load Prompt
        id: prompt
        run: |
          RAW=$(cat .github/ai-review-prompt.txt)
          PROMPT=$(printf "%s" "$RAW" | jq -Rs .)
          printf "PROMPT=%s\n" "$PROMPT" >> $GITHUB_OUTPUT

      - name: Generate diff
        run: |
          git fetch origin ${{ github.base_ref }}
          git diff origin/${{ github.base_ref }} --unified=3 > diff.patch

      - name: Call ChatGPT
        id: ai
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          SYS=${{ steps.prompt.outputs.PROMPT }}
          DIFF=$(cat diff.patch)

          JSON=$(jq -n \
            --arg sys "$SYS" \
            --arg diff "$DIFF" \
            '{
              model: "gpt-4o-mini",
              messages: [
                {role:"system", content:$sys},
                {role:"user", content:"以下為本次 PR diff，請開始審查："},
                {role:"user", content:$diff}
              ]
            }'
          )

          resp=$(curl -s https://api.openai.com/v1/chat/completions \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -H "Content-Type: application/json" \
            -d "$JSON")

          echo "=== RAW RESPONSE ==="
          echo "$resp"

          content=$(echo "$resp" | jq -r '.choices[0].message.content // empty')
          if [ -z "$content" ]; then
            err=$(echo "$resp" | jq -r '.error.message // "OpenAI API Error"')
            printf "REVIEW=%s\n" "$err" >> $GITHUB_OUTPUT
            exit 1
          fi

          printf "REVIEW=%s\n" "$content" >> $GITHUB_OUTPUT

      - name: Add Comment to PR (safe)
        if: always()
        env:
          REVIEW: ${{ steps.ai.outputs.REVIEW }}
        run: |
          jq -n --arg body "$REVIEW" '{body:$body}' > body.json
          curl -s -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d @body.json \
            "https://api.github.com/repos/${GITHUB_REPOSITORY}/issues/${{ github.event.pull_request.number }}/comments"
